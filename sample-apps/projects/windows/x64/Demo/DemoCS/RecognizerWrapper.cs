//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Microblink {

public class MBCroatiaCommonBarcodePaymentRecognizerSettings : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBCroatiaCommonBarcodePaymentRecognizerSettings(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBCroatiaCommonBarcodePaymentRecognizerSettings obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBCroatiaCommonBarcodePaymentRecognizerSettings() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBCroatiaCommonBarcodePaymentRecognizerSettings(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public float conversionRate {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaCommonBarcodePaymentRecognizerSettings_conversionRate_set(swigCPtr, value);
    } 
    get {
      float ret = RecognizerApiWrapperPINVOKE.MBCroatiaCommonBarcodePaymentRecognizerSettings_conversionRate_get(swigCPtr);
      return ret;
    } 
  }

  public MBCroatiaCommonBarcodePaymentRecognizerSettings() : this(RecognizerApiWrapperPINVOKE.new_MBCroatiaCommonBarcodePaymentRecognizerSettings(), true) {
  }

}

}
namespace Microblink {

public class MBCroatiaPdf417PaymentRecognizerSettings : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBCroatiaPdf417PaymentRecognizerSettings(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBCroatiaPdf417PaymentRecognizerSettings obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBCroatiaPdf417PaymentRecognizerSettings() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBCroatiaPdf417PaymentRecognizerSettings(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public MBCroatiaCommonBarcodePaymentRecognizerSettings common {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaPdf417PaymentRecognizerSettings_common_set(swigCPtr, MBCroatiaCommonBarcodePaymentRecognizerSettings.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBCroatiaPdf417PaymentRecognizerSettings_common_get(swigCPtr);
      MBCroatiaCommonBarcodePaymentRecognizerSettings ret = (cPtr == global::System.IntPtr.Zero) ? null : new MBCroatiaCommonBarcodePaymentRecognizerSettings(cPtr, false);
      return ret;
    } 
  }

  public byte uncertainDecoding {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaPdf417PaymentRecognizerSettings_uncertainDecoding_set(swigCPtr, value);
    } 
    get {
      byte ret = RecognizerApiWrapperPINVOKE.MBCroatiaPdf417PaymentRecognizerSettings_uncertainDecoding_get(swigCPtr);
      return ret;
    } 
  }

  public MBCroatiaPdf417PaymentRecognizerSettings() : this(RecognizerApiWrapperPINVOKE.new_MBCroatiaPdf417PaymentRecognizerSettings(), true) {
  }

}

}
namespace Microblink {

public class MBCroatiaQrPaymentRecognizerSettings : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBCroatiaQrPaymentRecognizerSettings(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBCroatiaQrPaymentRecognizerSettings obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBCroatiaQrPaymentRecognizerSettings() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBCroatiaQrPaymentRecognizerSettings(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public MBCroatiaCommonBarcodePaymentRecognizerSettings common {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaQrPaymentRecognizerSettings_common_set(swigCPtr, MBCroatiaCommonBarcodePaymentRecognizerSettings.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBCroatiaQrPaymentRecognizerSettings_common_get(swigCPtr);
      MBCroatiaCommonBarcodePaymentRecognizerSettings ret = (cPtr == global::System.IntPtr.Zero) ? null : new MBCroatiaCommonBarcodePaymentRecognizerSettings(cPtr, false);
      return ret;
    } 
  }

  public byte slowerThoroughScan {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaQrPaymentRecognizerSettings_slowerThoroughScan_set(swigCPtr, value);
    } 
    get {
      byte ret = RecognizerApiWrapperPINVOKE.MBCroatiaQrPaymentRecognizerSettings_slowerThoroughScan_get(swigCPtr);
      return ret;
    } 
  }

  public MBCroatiaQrPaymentRecognizerSettings() : this(RecognizerApiWrapperPINVOKE.new_MBCroatiaQrPaymentRecognizerSettings(), true) {
  }

}

}
namespace Microblink {

public enum MBCroatiaBarcodePaymentSlipIdType {
  MB_CROATIA_PAYMENT_BARCODE_TYPE_HUB1 = 0,
  MB_CROATIA_PAYMENT_BARCODE_TYPE_HUB3
}

}
namespace Microblink {

public class MBCroatiaBarcodePaymentRecognizerResult : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBCroatiaBarcodePaymentRecognizerResult(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBCroatiaBarcodePaymentRecognizerResult obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBCroatiaBarcodePaymentRecognizerResult() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBCroatiaBarcodePaymentRecognizerResult(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public MBBaseRecognizerResult baseResult {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_baseResult_set(swigCPtr, MBBaseRecognizerResult.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_baseResult_get(swigCPtr);
      MBBaseRecognizerResult ret = (cPtr == global::System.IntPtr.Zero) ? null : new MBBaseRecognizerResult(cPtr, false);
      return ret;
    } 
  }

  public int amountHrk {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_amountHrk_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_amountHrk_get(swigCPtr);
      return ret;
    } 
  }

  public int amountEur {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_amountEur_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_amountEur_get(swigCPtr);
      return ret;
    } 
  }

  public byte conversionToEurPerformed {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_conversionToEurPerformed_set(swigCPtr, value);
    } 
    get {
      byte ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_conversionToEurPerformed_get(swigCPtr);
      return ret;
    } 
  }

  public string payerName {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_payerName_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_payerName_get(swigCPtr);
      return ret;
    } 
  }

  public string payerAddress {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_payerAddress_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_payerAddress_get(swigCPtr);
      return ret;
    } 
  }

  public string payerDetailedAddress {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_payerDetailedAddress_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_payerDetailedAddress_get(swigCPtr);
      return ret;
    } 
  }

  public string recipientName {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_recipientName_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_recipientName_get(swigCPtr);
      return ret;
    } 
  }

  public string recipientAddress {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_recipientAddress_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_recipientAddress_get(swigCPtr);
      return ret;
    } 
  }

  public string recipientDetailedAddress {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_recipientDetailedAddress_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_recipientDetailedAddress_get(swigCPtr);
      return ret;
    } 
  }

  public string accountNumber {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_accountNumber_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_accountNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string bankCode {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_bankCode_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_bankCode_get(swigCPtr);
      return ret;
    } 
  }

  public string iban {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_iban_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_iban_get(swigCPtr);
      return ret;
    } 
  }

  public string referenceModel {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_referenceModel_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_referenceModel_get(swigCPtr);
      return ret;
    } 
  }

  public string reference {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_reference_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_reference_get(swigCPtr);
      return ret;
    } 
  }

  public string purposeCode {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_purposeCode_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_purposeCode_get(swigCPtr);
      return ret;
    } 
  }

  public string paymentDescription {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_paymentDescription_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_paymentDescription_get(swigCPtr);
      return ret;
    } 
  }

  public string paymentDescriptionCode {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_paymentDescriptionCode_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_paymentDescriptionCode_get(swigCPtr);
      return ret;
    } 
  }

  public MBDate dueDate {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_dueDate_set(swigCPtr, MBDate.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_dueDate_get(swigCPtr);
      MBDate ret = (cPtr == global::System.IntPtr.Zero) ? null : new MBDate(cPtr, false);
      return ret;
    } 
  }

  public string optionalData {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_optionalData_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_optionalData_get(swigCPtr);
      return ret;
    } 
  }

  public MBCroatiaBarcodePaymentSlipIdType slipId {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_slipId_set(swigCPtr, (int)value);
    } 
    get {
      MBCroatiaBarcodePaymentSlipIdType ret = (MBCroatiaBarcodePaymentSlipIdType)RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_slipId_get(swigCPtr);
      return ret;
    } 
  }

  public byte uncertain {
    set {
      RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_uncertain_set(swigCPtr, value);
    } 
    get {
      byte ret = RecognizerApiWrapperPINVOKE.MBCroatiaBarcodePaymentRecognizerResult_uncertain_get(swigCPtr);
      return ret;
    } 
  }

  public MBCroatiaBarcodePaymentRecognizerResult() : this(RecognizerApiWrapperPINVOKE.new_MBCroatiaBarcodePaymentRecognizerResult(), true) {
  }

}

}
namespace Microblink {

public enum MBRecognizerResultState {
  MB_RECOGNIZER_RESULT_STATE_EMPTY,
  MB_RECOGNIZER_RESULT_STATE_UNCERTAIN,
  MB_RECOGNIZER_RESULT_STATE_VALID,
  MB_RECOGNIZER_RESULT_STATE_STAGE_VALID
}

}
namespace Microblink {

public class MBBaseRecognizerResult : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBBaseRecognizerResult(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBBaseRecognizerResult obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBBaseRecognizerResult() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBBaseRecognizerResult(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public MBRecognizerResultState state {
    set {
      RecognizerApiWrapperPINVOKE.MBBaseRecognizerResult_state_set(swigCPtr, (int)value);
    } 
    get {
      MBRecognizerResultState ret = (MBRecognizerResultState)RecognizerApiWrapperPINVOKE.MBBaseRecognizerResult_state_get(swigCPtr);
      return ret;
    } 
  }

  public MBBaseRecognizerResult() : this(RecognizerApiWrapperPINVOKE.new_MBBaseRecognizerResult(), true) {
  }

}

}
namespace Microblink {

public enum MBRecognizerErrorStatus {
  MB_RECOGNIZER_ERROR_STATUS_SUCCESS = 0,
  MB_RECOGNIZER_ERROR_STATUS_FAIL,
  MB_RECOGNIZER_ERROR_STATUS_MALLOC_FAIL,
  MB_RECOGNIZER_ERROR_STATUS_INVALID_LICENSE_KEY,
  MB_RECOGNIZER_ERROR_STATUS_NOT_SUPPORTED,
  MB_RECOGNIZER_ERROR_STATUS_RECOGNIZER_IN_USE,
  MB_RECOGNIZER_ERROR_STATUS_INVALID_SETTINGS,
  MB_RECOGNIZER_ERROR_STATUS_INVALID_ARGUMENT,
  MB_RECOGNIZER_ERROR_STATUS_NETWORK_ERROR,
  MB_RECOGNIZER_ERROR_STATUS_REMOTE_LOCK
}

}
namespace Microblink {

public enum MBRawImageType {
  MB_RAW_IMAGE_TYPE_BGRA,
  MB_RAW_IMAGE_TYPE_RGBA,
  MB_RAW_IMAGE_TYPE_BGR,
  MB_RAW_IMAGE_TYPE_RGB,
  MB_RAW_IMAGE_TYPE_GRAY,
  MB_RAW_IMAGE_TYPE_NV21
}

}
namespace Microblink {

public enum MBImageOrientation {
  MB_IMAGE_ORIENTATION_ROTATED_LEFT_90,
  MB_IMAGE_ORIENTATION_NO_ROTATION,
  MB_IMAGE_ORIENTATION_ROTATED_RIGHT_90,
  MB_IMAGE_ORIENTATION_ROTATED_180
}

}
namespace Microblink {

public class MBRecognizerRunnerSettings : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBRecognizerRunnerSettings(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBRecognizerRunnerSettings obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBRecognizerRunnerSettings() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBRecognizerRunnerSettings(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public byte allowMultipleResults {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognizerRunnerSettings_allowMultipleResults_set(swigCPtr, value);
    } 
    get {
      byte ret = RecognizerApiWrapperPINVOKE.MBRecognizerRunnerSettings_allowMultipleResults_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_void recognizers {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognizerRunnerSettings_recognizers_set(swigCPtr, SWIGTYPE_p_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognizerRunnerSettings_recognizers_get(swigCPtr);
      SWIGTYPE_p_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_void(cPtr, false);
      return ret;
    } 
  }

  public uint numOfRecognizers {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognizerRunnerSettings_numOfRecognizers_set(swigCPtr, value);
    } 
    get {
      uint ret = RecognizerApiWrapperPINVOKE.MBRecognizerRunnerSettings_numOfRecognizers_get(swigCPtr);
      return ret;
    } 
  }

  public MBRecognizerRunnerSettings() : this(RecognizerApiWrapperPINVOKE.new_MBRecognizerRunnerSettings(), true) {
  }

}

}
namespace Microblink {

public class MBPoint : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBPoint(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBPoint obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBPoint() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBPoint(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int x {
    set {
      RecognizerApiWrapperPINVOKE.MBPoint_x_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBPoint_x_get(swigCPtr);
      return ret;
    } 
  }

  public int y {
    set {
      RecognizerApiWrapperPINVOKE.MBPoint_y_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBPoint_y_get(swigCPtr);
      return ret;
    } 
  }

  public MBPoint() : this(RecognizerApiWrapperPINVOKE.new_MBPoint(), true) {
  }

}

}
namespace Microblink {

public class MBSize : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBSize(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBSize obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBSize() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBSize(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int width {
    set {
      RecognizerApiWrapperPINVOKE.MBSize_width_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBSize_width_get(swigCPtr);
      return ret;
    } 
  }

  public int height {
    set {
      RecognizerApiWrapperPINVOKE.MBSize_height_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBSize_height_get(swigCPtr);
      return ret;
    } 
  }

  public MBSize() : this(RecognizerApiWrapperPINVOKE.new_MBSize(), true) {
  }

}

}
namespace Microblink {

public enum MBDetectionStatus {
  DETECTION_STATUS_SUCCESS,
  DETECTION_STATUS_FAIL,
  DETECTION_STATUS_CAMERA_TOO_HIGH,
  DETECTION_STATUS_PARTIAL_OBJECT,
  DETECTION_STATUS_CAMERA_AT_ANGLE,
  DETECTION_STATUS_CAMERA_TOO_NEAR,
  DETECTION_STATUS_DOCUMENT_TOO_CLOSE_TO_EDGE
}

}
namespace Microblink {

public enum MBShowImageType {
  SHOW_IMAGE_TYPE_ORIGINAL,
  SHOW_IMAGE_TYPE_DEWARPED,
  SHOW_IMAGE_TYPE_SUCCESSFUL_SCAN
}

}
namespace Microblink {

public class MBRecognitionCallback : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBRecognitionCallback(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBRecognitionCallback obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBRecognitionCallback() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBRecognitionCallback(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public SWIGTYPE_p_f___void onDetectionStarted {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectionStarted_set(swigCPtr, SWIGTYPE_p_f___void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectionStarted_get(swigCPtr);
      SWIGTYPE_p_f___void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f___void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void onDetectionMidway {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectionMidway_set(swigCPtr, SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectionMidway_get(swigCPtr);
      SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char onDetectedObject {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectedObject_set(swigCPtr, SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectedObject_get(swigCPtr);
      SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f___void onDetectionFailed {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectionFailed_set(swigCPtr, SWIGTYPE_p_f___void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onDetectionFailed_get(swigCPtr);
      SWIGTYPE_p_f___void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f___void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f___void onRecognitionStarted {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onRecognitionStarted_set(swigCPtr, SWIGTYPE_p_f___void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onRecognitionStarted_get(swigCPtr);
      SWIGTYPE_p_f___void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f___void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f___void onRecognitionFinished {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onRecognitionFinished_set(swigCPtr, SWIGTYPE_p_f___void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onRecognitionFinished_get(swigCPtr);
      SWIGTYPE_p_f___void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f___void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void onShowImage {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onShowImage_set(swigCPtr, SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onShowImage_get(swigCPtr);
      SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f___void onFirstSideResult {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onFirstSideResult_set(swigCPtr, SWIGTYPE_p_f___void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onFirstSideResult_get(swigCPtr);
      SWIGTYPE_p_f___void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f___void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_unsigned_char__void onGlare {
    set {
      RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onGlare_set(swigCPtr, SWIGTYPE_p_f_unsigned_char__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognitionCallback_onGlare_get(swigCPtr);
      SWIGTYPE_p_f_unsigned_char__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_unsigned_char__void(cPtr, false);
      return ret;
    } 
  }

  public MBRecognitionCallback() : this(RecognizerApiWrapperPINVOKE.new_MBRecognitionCallback(), true) {
  }

}

}
namespace Microblink {

public class MBRectangle : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBRectangle(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBRectangle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBRectangle() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBRectangle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public float x {
    set {
      RecognizerApiWrapperPINVOKE.MBRectangle_x_set(swigCPtr, value);
    } 
    get {
      float ret = RecognizerApiWrapperPINVOKE.MBRectangle_x_get(swigCPtr);
      return ret;
    } 
  }

  public float y {
    set {
      RecognizerApiWrapperPINVOKE.MBRectangle_y_set(swigCPtr, value);
    } 
    get {
      float ret = RecognizerApiWrapperPINVOKE.MBRectangle_y_get(swigCPtr);
      return ret;
    } 
  }

  public float width {
    set {
      RecognizerApiWrapperPINVOKE.MBRectangle_width_set(swigCPtr, value);
    } 
    get {
      float ret = RecognizerApiWrapperPINVOKE.MBRectangle_width_get(swigCPtr);
      return ret;
    } 
  }

  public float height {
    set {
      RecognizerApiWrapperPINVOKE.MBRectangle_height_set(swigCPtr, value);
    } 
    get {
      float ret = RecognizerApiWrapperPINVOKE.MBRectangle_height_get(swigCPtr);
      return ret;
    } 
  }

  public MBRectangle() : this(RecognizerApiWrapperPINVOKE.new_MBRectangle(), true) {
  }

}

}
namespace Microblink {

public class MBDate : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MBDate(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MBDate obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MBDate() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RecognizerApiWrapperPINVOKE.delete_MBDate(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int day {
    set {
      RecognizerApiWrapperPINVOKE.MBDate_day_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBDate_day_get(swigCPtr);
      return ret;
    } 
  }

  public int month {
    set {
      RecognizerApiWrapperPINVOKE.MBDate_month_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBDate_month_get(swigCPtr);
      return ret;
    } 
  }

  public int year {
    set {
      RecognizerApiWrapperPINVOKE.MBDate_year_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBDate_year_get(swigCPtr);
      return ret;
    } 
  }

  public int successfullyParsed {
    set {
      RecognizerApiWrapperPINVOKE.MBDate_successfullyParsed_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBDate_successfullyParsed_get(swigCPtr);
      return ret;
    } 
  }

  public string originalString {
    set {
      RecognizerApiWrapperPINVOKE.MBDate_originalString_set(swigCPtr, value);
    } 
    get {
      string ret = RecognizerApiWrapperPINVOKE.MBDate_originalString_get(swigCPtr);
      return ret;
    } 
  }

  public int empty {
    set {
      RecognizerApiWrapperPINVOKE.MBDate_empty_set(swigCPtr, value);
    } 
    get {
      int ret = RecognizerApiWrapperPINVOKE.MBDate_empty_get(swigCPtr);
      return ret;
    } 
  }

  public MBDate() : this(RecognizerApiWrapperPINVOKE.new_MBDate(), true) {
  }

}

}
namespace Microblink {

class RecognizerApiWrapperPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="SWIGRegisterExceptionCallbacks_RecognizerApiWrapper")]
    public static extern void SWIGRegisterExceptionCallbacks_RecognizerApiWrapper(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_RecognizerApiWrapper")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_RecognizerApiWrapper(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_RecognizerApiWrapper(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_RecognizerApiWrapper(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="SWIGRegisterStringCallback_RecognizerApiWrapper")]
    public static extern void SWIGRegisterStringCallback_RecognizerApiWrapper(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_RecognizerApiWrapper(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static RecognizerApiWrapperPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerAPIUnlockWithLicenseKey")]
  public static extern int recognizerAPIUnlockWithLicenseKey(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerAPIUnlockWithLicenseBuffer")]
  public static extern int recognizerAPIUnlockWithLicenseBuffer(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerAPIUnlockForLicenseeWithLicenseKey")]
  public static extern int recognizerAPIUnlockForLicenseeWithLicenseKey(string jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerAPIUnlockForLicenseeWithLicenseBuffer")]
  public static extern int recognizerAPIUnlockForLicenseeWithLicenseBuffer(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaCommonBarcodePaymentRecognizerSettings_conversionRate_set")]
  public static extern void MBCroatiaCommonBarcodePaymentRecognizerSettings_conversionRate_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaCommonBarcodePaymentRecognizerSettings_conversionRate_get")]
  public static extern float MBCroatiaCommonBarcodePaymentRecognizerSettings_conversionRate_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBCroatiaCommonBarcodePaymentRecognizerSettings")]
  public static extern global::System.IntPtr new_MBCroatiaCommonBarcodePaymentRecognizerSettings();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBCroatiaCommonBarcodePaymentRecognizerSettings")]
  public static extern void delete_MBCroatiaCommonBarcodePaymentRecognizerSettings(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaPdf417PaymentRecognizerSettingsInit")]
  public static extern void croatiaPdf417PaymentRecognizerSettingsInit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaPdf417PaymentRecognizerSettings_common_set")]
  public static extern void MBCroatiaPdf417PaymentRecognizerSettings_common_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaPdf417PaymentRecognizerSettings_common_get")]
  public static extern global::System.IntPtr MBCroatiaPdf417PaymentRecognizerSettings_common_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaPdf417PaymentRecognizerSettings_uncertainDecoding_set")]
  public static extern void MBCroatiaPdf417PaymentRecognizerSettings_uncertainDecoding_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaPdf417PaymentRecognizerSettings_uncertainDecoding_get")]
  public static extern byte MBCroatiaPdf417PaymentRecognizerSettings_uncertainDecoding_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBCroatiaPdf417PaymentRecognizerSettings")]
  public static extern global::System.IntPtr new_MBCroatiaPdf417PaymentRecognizerSettings();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBCroatiaPdf417PaymentRecognizerSettings")]
  public static extern void delete_MBCroatiaPdf417PaymentRecognizerSettings(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaQrPaymentRecognizerSettingsInit")]
  public static extern void croatiaQrPaymentRecognizerSettingsInit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaQrPaymentRecognizerSettings_common_set")]
  public static extern void MBCroatiaQrPaymentRecognizerSettings_common_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaQrPaymentRecognizerSettings_common_get")]
  public static extern global::System.IntPtr MBCroatiaQrPaymentRecognizerSettings_common_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaQrPaymentRecognizerSettings_slowerThoroughScan_set")]
  public static extern void MBCroatiaQrPaymentRecognizerSettings_slowerThoroughScan_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaQrPaymentRecognizerSettings_slowerThoroughScan_get")]
  public static extern byte MBCroatiaQrPaymentRecognizerSettings_slowerThoroughScan_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBCroatiaQrPaymentRecognizerSettings")]
  public static extern global::System.IntPtr new_MBCroatiaQrPaymentRecognizerSettings();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBCroatiaQrPaymentRecognizerSettings")]
  public static extern void delete_MBCroatiaQrPaymentRecognizerSettings(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_baseResult_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_baseResult_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_baseResult_get")]
  public static extern global::System.IntPtr MBCroatiaBarcodePaymentRecognizerResult_baseResult_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_amountHrk_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_amountHrk_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_amountHrk_get")]
  public static extern int MBCroatiaBarcodePaymentRecognizerResult_amountHrk_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_amountEur_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_amountEur_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_amountEur_get")]
  public static extern int MBCroatiaBarcodePaymentRecognizerResult_amountEur_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_conversionToEurPerformed_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_conversionToEurPerformed_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_conversionToEurPerformed_get")]
  public static extern byte MBCroatiaBarcodePaymentRecognizerResult_conversionToEurPerformed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_payerName_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_payerName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_payerName_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_payerName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_payerAddress_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_payerAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_payerAddress_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_payerAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_payerDetailedAddress_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_payerDetailedAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_payerDetailedAddress_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_payerDetailedAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_recipientName_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_recipientName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_recipientName_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_recipientName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_recipientAddress_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_recipientAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_recipientAddress_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_recipientAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_recipientDetailedAddress_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_recipientDetailedAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_recipientDetailedAddress_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_recipientDetailedAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_accountNumber_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_accountNumber_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_accountNumber_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_accountNumber_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_bankCode_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_bankCode_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_bankCode_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_bankCode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_iban_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_iban_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_iban_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_iban_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_referenceModel_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_referenceModel_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_referenceModel_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_referenceModel_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_reference_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_reference_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_reference_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_reference_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_purposeCode_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_purposeCode_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_purposeCode_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_purposeCode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_paymentDescription_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_paymentDescription_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_paymentDescription_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_paymentDescription_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_paymentDescriptionCode_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_paymentDescriptionCode_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_paymentDescriptionCode_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_paymentDescriptionCode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_dueDate_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_dueDate_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_dueDate_get")]
  public static extern global::System.IntPtr MBCroatiaBarcodePaymentRecognizerResult_dueDate_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_optionalData_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_optionalData_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_optionalData_get")]
  public static extern string MBCroatiaBarcodePaymentRecognizerResult_optionalData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_slipId_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_slipId_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_slipId_get")]
  public static extern int MBCroatiaBarcodePaymentRecognizerResult_slipId_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_uncertain_set")]
  public static extern void MBCroatiaBarcodePaymentRecognizerResult_uncertain_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaBarcodePaymentRecognizerResult_uncertain_get")]
  public static extern byte MBCroatiaBarcodePaymentRecognizerResult_uncertain_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBCroatiaBarcodePaymentRecognizerResult")]
  public static extern global::System.IntPtr new_MBCroatiaBarcodePaymentRecognizerResult();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBCroatiaBarcodePaymentRecognizerResult")]
  public static extern void delete_MBCroatiaBarcodePaymentRecognizerResult(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaPdf417PaymentRecognizerCreate")]
  public static extern int croatiaPdf417PaymentRecognizerCreate(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaPdf417PaymentRecognizerUpdate")]
  public static extern int croatiaPdf417PaymentRecognizerUpdate(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaPdf417PaymentRecognizerResult")]
  public static extern int croatiaPdf417PaymentRecognizerResult(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaPdf417PaymentRecognizerDelete")]
  public static extern int croatiaPdf417PaymentRecognizerDelete(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaQrPaymentRecognizerCreate")]
  public static extern int croatiaQrPaymentRecognizerCreate(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaQrPaymentRecognizerUpdate")]
  public static extern int croatiaQrPaymentRecognizerUpdate(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaQrPaymentRecognizerResult")]
  public static extern int croatiaQrPaymentRecognizerResult(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_croatiaQrPaymentRecognizerDelete")]
  public static extern int croatiaQrPaymentRecognizerDelete(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBBaseRecognizerResult_state_set")]
  public static extern void MBBaseRecognizerResult_state_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBBaseRecognizerResult_state_get")]
  public static extern int MBBaseRecognizerResult_state_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBBaseRecognizerResult")]
  public static extern global::System.IntPtr new_MBBaseRecognizerResult();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBBaseRecognizerResult")]
  public static extern void delete_MBBaseRecognizerResult(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerAPIGetVersionString")]
  public static extern string recognizerAPIGetVersionString();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerAPISetResourcesLocation")]
  public static extern int recognizerAPISetResourcesLocation(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerAPISetCacheLocation")]
  public static extern int recognizerAPISetCacheLocation(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerErrorToString")]
  public static extern string recognizerErrorToString(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageCreateFromRawImage")]
  public static extern int recognizerImageCreateFromRawImage(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ushort jarg3, ushort jarg4, ushort jarg5, int jarg6);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageLoadFromFile")]
  public static extern int recognizerImageLoadFromFile(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageSetNewRawBuffer")]
  public static extern int recognizerImageSetNewRawBuffer(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ushort jarg3, ushort jarg4, ushort jarg5, int jarg6);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageCreateCopyFromImage")]
  public static extern int recognizerImageCreateCopyFromImage(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageDelete")]
  public static extern int recognizerImageDelete(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageSetImageOrientation")]
  public static extern int recognizerImageSetImageOrientation(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageGetImageOrientation")]
  public static extern int recognizerImageGetImageOrientation(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageGetRawBytes")]
  public static extern global::System.IntPtr recognizerImageGetRawBytes(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageGetMutableRawBytes")]
  public static extern global::System.IntPtr recognizerImageGetMutableRawBytes(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageGetWidth")]
  public static extern ushort recognizerImageGetWidth(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageGetHeight")]
  public static extern ushort recognizerImageGetHeight(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageGetBytesPerRow")]
  public static extern ushort recognizerImageGetBytesPerRow(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerImageGetRawImageType")]
  public static extern int recognizerImageGetRawImageType(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerSettingsDefaultInit")]
  public static extern void recognizerRunnerSettingsDefaultInit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunnerSettings_allowMultipleResults_set")]
  public static extern void MBRecognizerRunnerSettings_allowMultipleResults_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunnerSettings_allowMultipleResults_get")]
  public static extern byte MBRecognizerRunnerSettings_allowMultipleResults_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunnerSettings_recognizers_set")]
  public static extern void MBRecognizerRunnerSettings_recognizers_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunnerSettings_recognizers_get")]
  public static extern global::System.IntPtr MBRecognizerRunnerSettings_recognizers_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunnerSettings_numOfRecognizers_set")]
  public static extern void MBRecognizerRunnerSettings_numOfRecognizers_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunnerSettings_numOfRecognizers_get")]
  public static extern uint MBRecognizerRunnerSettings_numOfRecognizers_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBRecognizerRunnerSettings")]
  public static extern global::System.IntPtr new_MBRecognizerRunnerSettings();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBRecognizerRunnerSettings")]
  public static extern void delete_MBRecognizerRunnerSettings(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBPoint_x_set")]
  public static extern void MBPoint_x_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBPoint_x_get")]
  public static extern int MBPoint_x_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBPoint_y_set")]
  public static extern void MBPoint_y_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBPoint_y_get")]
  public static extern int MBPoint_y_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBPoint")]
  public static extern global::System.IntPtr new_MBPoint();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBPoint")]
  public static extern void delete_MBPoint(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBSize_width_set")]
  public static extern void MBSize_width_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBSize_width_get")]
  public static extern int MBSize_width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBSize_height_set")]
  public static extern void MBSize_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBSize_height_get")]
  public static extern int MBSize_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBSize")]
  public static extern global::System.IntPtr new_MBSize();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBSize")]
  public static extern void delete_MBSize(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognitionCallbackDefaultInit")]
  public static extern void recognitionCallbackDefaultInit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectionStarted_set")]
  public static extern void MBRecognitionCallback_onDetectionStarted_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectionStarted_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onDetectionStarted_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectionMidway_set")]
  public static extern void MBRecognitionCallback_onDetectionMidway_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectionMidway_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onDetectionMidway_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectedObject_set")]
  public static extern void MBRecognitionCallback_onDetectedObject_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectedObject_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onDetectedObject_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectionFailed_set")]
  public static extern void MBRecognitionCallback_onDetectionFailed_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onDetectionFailed_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onDetectionFailed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onRecognitionStarted_set")]
  public static extern void MBRecognitionCallback_onRecognitionStarted_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onRecognitionStarted_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onRecognitionStarted_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onRecognitionFinished_set")]
  public static extern void MBRecognitionCallback_onRecognitionFinished_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onRecognitionFinished_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onRecognitionFinished_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onShowImage_set")]
  public static extern void MBRecognitionCallback_onShowImage_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onShowImage_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onShowImage_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onFirstSideResult_set")]
  public static extern void MBRecognitionCallback_onFirstSideResult_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onFirstSideResult_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onFirstSideResult_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onGlare_set")]
  public static extern void MBRecognitionCallback_onGlare_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognitionCallback_onGlare_get")]
  public static extern global::System.IntPtr MBRecognitionCallback_onGlare_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBRecognitionCallback")]
  public static extern global::System.IntPtr new_MBRecognitionCallback();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBRecognitionCallback")]
  public static extern void delete_MBRecognitionCallback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerCreate")]
  public static extern int recognizerRunnerCreate(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerUpdateSettings")]
  public static extern int recognizerRunnerUpdateSettings(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerDelete")]
  public static extern int recognizerRunnerDelete(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerSetROI")]
  public static extern int recognizerRunnerSetROI(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerRecognizeFromImage")]
  public static extern int recognizerRunnerRecognizeFromImage(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerRecognizeFromString")]
  public static extern int recognizerRunnerRecognizeFromString(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerCancelCurrentRecognition")]
  public static extern int recognizerRunnerCancelCurrentRecognition(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_recognizerRunnerReset")]
  public static extern int recognizerRunnerReset(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_x_set")]
  public static extern void MBRectangle_x_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_x_get")]
  public static extern float MBRectangle_x_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_y_set")]
  public static extern void MBRectangle_y_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_y_get")]
  public static extern float MBRectangle_y_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_width_set")]
  public static extern void MBRectangle_width_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_width_get")]
  public static extern float MBRectangle_width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_height_set")]
  public static extern void MBRectangle_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRectangle_height_get")]
  public static extern float MBRectangle_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBRectangle")]
  public static extern global::System.IntPtr new_MBRectangle();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBRectangle")]
  public static extern void delete_MBRectangle(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MB_FALSE_get")]
  public static extern int MB_FALSE_get();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MB_TRUE_get")]
  public static extern int MB_TRUE_get();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_day_set")]
  public static extern void MBDate_day_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_day_get")]
  public static extern int MBDate_day_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_month_set")]
  public static extern void MBDate_month_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_month_get")]
  public static extern int MBDate_month_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_year_set")]
  public static extern void MBDate_year_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_year_get")]
  public static extern int MBDate_year_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_successfullyParsed_set")]
  public static extern void MBDate_successfullyParsed_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_successfullyParsed_get")]
  public static extern int MBDate_successfullyParsed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_originalString_set")]
  public static extern void MBDate_originalString_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_originalString_get")]
  public static extern string MBDate_originalString_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_empty_set")]
  public static extern void MBDate_empty_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBDate_empty_get")]
  public static extern int MBDate_empty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBDate")]
  public static extern global::System.IntPtr new_MBDate();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBDate")]
  public static extern void delete_MBDate(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBRecognizerImage")]
  public static extern global::System.IntPtr new_MBRecognizerImage();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_copy_MBRecognizerImage")]
  public static extern global::System.IntPtr copy_MBRecognizerImage(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBRecognizerImage")]
  public static extern void delete_MBRecognizerImage(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerImage_assign")]
  public static extern void MBRecognizerImage_assign(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerImage_value")]
  public static extern global::System.IntPtr MBRecognizerImage_value(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBCroatiaPdf417PaymentRecognizer")]
  public static extern global::System.IntPtr new_MBCroatiaPdf417PaymentRecognizer();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_copy_MBCroatiaPdf417PaymentRecognizer")]
  public static extern global::System.IntPtr copy_MBCroatiaPdf417PaymentRecognizer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBCroatiaPdf417PaymentRecognizer")]
  public static extern void delete_MBCroatiaPdf417PaymentRecognizer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaPdf417PaymentRecognizer_assign")]
  public static extern void MBCroatiaPdf417PaymentRecognizer_assign(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaPdf417PaymentRecognizer_value")]
  public static extern global::System.IntPtr MBCroatiaPdf417PaymentRecognizer_value(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBCroatiaQrPaymentRecognizer")]
  public static extern global::System.IntPtr new_MBCroatiaQrPaymentRecognizer();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_copy_MBCroatiaQrPaymentRecognizer")]
  public static extern global::System.IntPtr copy_MBCroatiaQrPaymentRecognizer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBCroatiaQrPaymentRecognizer")]
  public static extern void delete_MBCroatiaQrPaymentRecognizer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaQrPaymentRecognizer_assign")]
  public static extern void MBCroatiaQrPaymentRecognizer_assign(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBCroatiaQrPaymentRecognizer_value")]
  public static extern global::System.IntPtr MBCroatiaQrPaymentRecognizer_value(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBRecognizerRunner")]
  public static extern global::System.IntPtr new_MBRecognizerRunner();

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_copy_MBRecognizerRunner")]
  public static extern global::System.IntPtr copy_MBRecognizerRunner(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBRecognizerRunner")]
  public static extern void delete_MBRecognizerRunner(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunner_assign")]
  public static extern void MBRecognizerRunner_assign(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerRunner_value")]
  public static extern global::System.IntPtr MBRecognizerRunner_value(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_new_MBRecognizerArray")]
  public static extern global::System.IntPtr new_MBRecognizerArray(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_delete_MBRecognizerArray")]
  public static extern void delete_MBRecognizerArray(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerArray_getitem")]
  public static extern System.IntPtr MBRecognizerArray_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("RecognizerApiWrapper", EntryPoint="CSharp_Microblink_MBRecognizerArray_setitem")]
  public static extern void MBRecognizerArray_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, System.IntPtr jarg3);
}

}
namespace Microblink {

public class RecognizerApiWrapper {
  public static MBRecognizerErrorStatus recognizerAPIUnlockWithLicenseKey(string licenseKeyBase64) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerAPIUnlockWithLicenseKey(licenseKeyBase64);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerAPIUnlockWithLicenseBuffer(SWIGTYPE_p_unsigned_char licenseBuffer, uint licenseBufferLength) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerAPIUnlockWithLicenseBuffer(SWIGTYPE_p_unsigned_char.getCPtr(licenseBuffer), licenseBufferLength);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerAPIUnlockForLicenseeWithLicenseKey(string licenseKeyBase64, string licensee) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerAPIUnlockForLicenseeWithLicenseKey(licenseKeyBase64, licensee);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerAPIUnlockForLicenseeWithLicenseBuffer(SWIGTYPE_p_unsigned_char licenseBuffer, uint licenseBufferLength, string licensee) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerAPIUnlockForLicenseeWithLicenseBuffer(SWIGTYPE_p_unsigned_char.getCPtr(licenseBuffer), licenseBufferLength, licensee);
    return ret;
  }

  public static void croatiaPdf417PaymentRecognizerSettingsInit(MBCroatiaPdf417PaymentRecognizerSettings arg0) {
    RecognizerApiWrapperPINVOKE.croatiaPdf417PaymentRecognizerSettingsInit(MBCroatiaPdf417PaymentRecognizerSettings.getCPtr(arg0));
  }

  public static void croatiaQrPaymentRecognizerSettingsInit(MBCroatiaQrPaymentRecognizerSettings arg0) {
    RecognizerApiWrapperPINVOKE.croatiaQrPaymentRecognizerSettingsInit(MBCroatiaQrPaymentRecognizerSettings.getCPtr(arg0));
  }

  public static MBRecognizerErrorStatus croatiaPdf417PaymentRecognizerCreate(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer croatiaPdf417PaymentRecognizer, MBCroatiaPdf417PaymentRecognizerSettings croatiaPdf417PaymentRecognizerSettings) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaPdf417PaymentRecognizerCreate(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(croatiaPdf417PaymentRecognizer), MBCroatiaPdf417PaymentRecognizerSettings.getCPtr(croatiaPdf417PaymentRecognizerSettings));
    return ret;
  }

  public static MBRecognizerErrorStatus croatiaPdf417PaymentRecognizerUpdate(SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer croatiaPdf417PaymentRecognizer, MBCroatiaPdf417PaymentRecognizerSettings croatiaPdf417PaymentRecognizerSettings) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaPdf417PaymentRecognizerUpdate(SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(croatiaPdf417PaymentRecognizer), MBCroatiaPdf417PaymentRecognizerSettings.getCPtr(croatiaPdf417PaymentRecognizerSettings));
    return ret;
  }

  public static MBRecognizerErrorStatus croatiaPdf417PaymentRecognizerResult(MBCroatiaBarcodePaymentRecognizerResult result, SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer croatiaPdf417PaymentRecognizer) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaPdf417PaymentRecognizerResult(MBCroatiaBarcodePaymentRecognizerResult.getCPtr(result), SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(croatiaPdf417PaymentRecognizer));
    return ret;
  }

  public static MBRecognizerErrorStatus croatiaPdf417PaymentRecognizerDelete(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer croatiaPdf417PaymentRecognizer) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaPdf417PaymentRecognizerDelete(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(croatiaPdf417PaymentRecognizer));
    return ret;
  }

  public static MBRecognizerErrorStatus croatiaQrPaymentRecognizerCreate(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer croatiaPdf417PaymentRecognizer, MBCroatiaQrPaymentRecognizerSettings croatiaQrPaymentRecognizerSettings) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaQrPaymentRecognizerCreate(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer.getCPtr(croatiaPdf417PaymentRecognizer), MBCroatiaQrPaymentRecognizerSettings.getCPtr(croatiaQrPaymentRecognizerSettings));
    return ret;
  }

  public static MBRecognizerErrorStatus croatiaQrPaymentRecognizerUpdate(SWIGTYPE_p_MBCroatiaQrPaymentRecognizer croatiaQrPaymentRecognizer, MBCroatiaQrPaymentRecognizerSettings croatiaQrPaymentRecognizerSettings) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaQrPaymentRecognizerUpdate(SWIGTYPE_p_MBCroatiaQrPaymentRecognizer.getCPtr(croatiaQrPaymentRecognizer), MBCroatiaQrPaymentRecognizerSettings.getCPtr(croatiaQrPaymentRecognizerSettings));
    return ret;
  }

  public static MBRecognizerErrorStatus croatiaQrPaymentRecognizerResult(MBCroatiaBarcodePaymentRecognizerResult result, SWIGTYPE_p_MBCroatiaQrPaymentRecognizer croatiaQrPaymentRecognizer) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaQrPaymentRecognizerResult(MBCroatiaBarcodePaymentRecognizerResult.getCPtr(result), SWIGTYPE_p_MBCroatiaQrPaymentRecognizer.getCPtr(croatiaQrPaymentRecognizer));
    return ret;
  }

  public static MBRecognizerErrorStatus croatiaQrPaymentRecognizerDelete(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer croatiaQrPaymentRecognizer) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.croatiaQrPaymentRecognizerDelete(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer.getCPtr(croatiaQrPaymentRecognizer));
    return ret;
  }

  public static string recognizerAPIGetVersionString() {
    string ret = RecognizerApiWrapperPINVOKE.recognizerAPIGetVersionString();
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerAPISetResourcesLocation(string resourcePath) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerAPISetResourcesLocation(resourcePath);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerAPISetCacheLocation(string cacheFolder) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerAPISetCacheLocation(cacheFolder);
    return ret;
  }

  public static string recognizerErrorToString(MBRecognizerErrorStatus errorStatus) {
    string ret = RecognizerApiWrapperPINVOKE.recognizerErrorToString((int)errorStatus);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerImageCreateFromRawImage(SWIGTYPE_p_p_MBRecognizerImage image, SWIGTYPE_p_unsigned_char input, ushort width, ushort height, ushort bytesPerRow, MBRawImageType rawType) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerImageCreateFromRawImage(SWIGTYPE_p_p_MBRecognizerImage.getCPtr(image), SWIGTYPE_p_unsigned_char.getCPtr(input), width, height, bytesPerRow, (int)rawType);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerImageLoadFromFile(SWIGTYPE_p_p_MBRecognizerImage image, string path) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerImageLoadFromFile(SWIGTYPE_p_p_MBRecognizerImage.getCPtr(image), path);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerImageSetNewRawBuffer(SWIGTYPE_p_MBRecognizerImage image, SWIGTYPE_p_unsigned_char input, ushort width, ushort height, ushort bytesPerRow, MBRawImageType rawType) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerImageSetNewRawBuffer(SWIGTYPE_p_MBRecognizerImage.getCPtr(image), SWIGTYPE_p_unsigned_char.getCPtr(input), width, height, bytesPerRow, (int)rawType);
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerImageCreateCopyFromImage(SWIGTYPE_p_p_MBRecognizerImage image, SWIGTYPE_p_MBRecognizerImage original) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerImageCreateCopyFromImage(SWIGTYPE_p_p_MBRecognizerImage.getCPtr(image), SWIGTYPE_p_MBRecognizerImage.getCPtr(original));
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerImageDelete(SWIGTYPE_p_p_MBRecognizerImage image) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerImageDelete(SWIGTYPE_p_p_MBRecognizerImage.getCPtr(image));
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerImageSetImageOrientation(SWIGTYPE_p_MBRecognizerImage image, MBImageOrientation orientation) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerImageSetImageOrientation(SWIGTYPE_p_MBRecognizerImage.getCPtr(image), (int)orientation);
    return ret;
  }

  public static MBImageOrientation recognizerImageGetImageOrientation(SWIGTYPE_p_MBRecognizerImage image) {
    MBImageOrientation ret = (MBImageOrientation)RecognizerApiWrapperPINVOKE.recognizerImageGetImageOrientation(SWIGTYPE_p_MBRecognizerImage.getCPtr(image));
    return ret;
  }

  public static SWIGTYPE_p_unsigned_char recognizerImageGetRawBytes(SWIGTYPE_p_MBRecognizerImage image) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.recognizerImageGetRawBytes(SWIGTYPE_p_MBRecognizerImage.getCPtr(image));
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_unsigned_char recognizerImageGetMutableRawBytes(SWIGTYPE_p_MBRecognizerImage image) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.recognizerImageGetMutableRawBytes(SWIGTYPE_p_MBRecognizerImage.getCPtr(image));
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public static ushort recognizerImageGetWidth(SWIGTYPE_p_MBRecognizerImage image) {
    ushort ret = RecognizerApiWrapperPINVOKE.recognizerImageGetWidth(SWIGTYPE_p_MBRecognizerImage.getCPtr(image));
    return ret;
  }

  public static ushort recognizerImageGetHeight(SWIGTYPE_p_MBRecognizerImage image) {
    ushort ret = RecognizerApiWrapperPINVOKE.recognizerImageGetHeight(SWIGTYPE_p_MBRecognizerImage.getCPtr(image));
    return ret;
  }

  public static ushort recognizerImageGetBytesPerRow(SWIGTYPE_p_MBRecognizerImage image) {
    ushort ret = RecognizerApiWrapperPINVOKE.recognizerImageGetBytesPerRow(SWIGTYPE_p_MBRecognizerImage.getCPtr(image));
    return ret;
  }

  public static MBRawImageType recognizerImageGetRawImageType(SWIGTYPE_p_MBRecognizerImage image) {
    MBRawImageType ret = (MBRawImageType)RecognizerApiWrapperPINVOKE.recognizerImageGetRawImageType(SWIGTYPE_p_MBRecognizerImage.getCPtr(image));
    return ret;
  }

  public static void recognizerRunnerSettingsDefaultInit(MBRecognizerRunnerSettings arg0) {
    RecognizerApiWrapperPINVOKE.recognizerRunnerSettingsDefaultInit(MBRecognizerRunnerSettings.getCPtr(arg0));
  }

  public static void recognitionCallbackDefaultInit(MBRecognitionCallback arg0) {
    RecognizerApiWrapperPINVOKE.recognitionCallbackDefaultInit(MBRecognitionCallback.getCPtr(arg0));
  }

  public static MBRecognizerErrorStatus recognizerRunnerCreate(SWIGTYPE_p_p_MBRecognizerRunner recognizerRunner, MBRecognizerRunnerSettings settings) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerRunnerCreate(SWIGTYPE_p_p_MBRecognizerRunner.getCPtr(recognizerRunner), MBRecognizerRunnerSettings.getCPtr(settings));
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerRunnerUpdateSettings(SWIGTYPE_p_MBRecognizerRunner recognizerRunner, MBRecognizerRunnerSettings settings) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerRunnerUpdateSettings(SWIGTYPE_p_MBRecognizerRunner.getCPtr(recognizerRunner), MBRecognizerRunnerSettings.getCPtr(settings));
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerRunnerDelete(SWIGTYPE_p_p_MBRecognizerRunner recognizerRunner) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerRunnerDelete(SWIGTYPE_p_p_MBRecognizerRunner.getCPtr(recognizerRunner));
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerRunnerSetROI(SWIGTYPE_p_MBRecognizerRunner recognizerRunner, MBRectangle regionOfInterest) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerRunnerSetROI(SWIGTYPE_p_MBRecognizerRunner.getCPtr(recognizerRunner), MBRectangle.getCPtr(regionOfInterest));
    return ret;
  }

  public static MBRecognizerResultState recognizerRunnerRecognizeFromImage(SWIGTYPE_p_MBRecognizerRunner recognizerRunner, SWIGTYPE_p_MBRecognizerImage image, byte imageIsVideoFrame, MBRecognitionCallback callback) {
    MBRecognizerResultState ret = (MBRecognizerResultState)RecognizerApiWrapperPINVOKE.recognizerRunnerRecognizeFromImage(SWIGTYPE_p_MBRecognizerRunner.getCPtr(recognizerRunner), SWIGTYPE_p_MBRecognizerImage.getCPtr(image), imageIsVideoFrame, MBRecognitionCallback.getCPtr(callback));
    return ret;
  }

  public static MBRecognizerResultState recognizerRunnerRecognizeFromString(SWIGTYPE_p_MBRecognizerRunner recognizerRunner, string string_, MBRecognitionCallback callback) {
    MBRecognizerResultState ret = (MBRecognizerResultState)RecognizerApiWrapperPINVOKE.recognizerRunnerRecognizeFromString(SWIGTYPE_p_MBRecognizerRunner.getCPtr(recognizerRunner), string_, MBRecognitionCallback.getCPtr(callback));
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerRunnerCancelCurrentRecognition(SWIGTYPE_p_MBRecognizerRunner recognizerRunner) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerRunnerCancelCurrentRecognition(SWIGTYPE_p_MBRecognizerRunner.getCPtr(recognizerRunner));
    return ret;
  }

  public static MBRecognizerErrorStatus recognizerRunnerReset(SWIGTYPE_p_MBRecognizerRunner recognizerRunner) {
    MBRecognizerErrorStatus ret = (MBRecognizerErrorStatus)RecognizerApiWrapperPINVOKE.recognizerRunnerReset(SWIGTYPE_p_MBRecognizerRunner.getCPtr(recognizerRunner));
    return ret;
  }

  public static SWIGTYPE_p_p_MBRecognizerImage new_MBRecognizerImage() {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.new_MBRecognizerImage();
    SWIGTYPE_p_p_MBRecognizerImage ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBRecognizerImage(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_MBRecognizerImage copy_MBRecognizerImage(SWIGTYPE_p_MBRecognizerImage value) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.copy_MBRecognizerImage(SWIGTYPE_p_MBRecognizerImage.getCPtr(value));
    SWIGTYPE_p_p_MBRecognizerImage ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBRecognizerImage(cPtr, false);
    return ret;
  }

  public static void delete_MBRecognizerImage(SWIGTYPE_p_p_MBRecognizerImage obj) {
    RecognizerApiWrapperPINVOKE.delete_MBRecognizerImage(SWIGTYPE_p_p_MBRecognizerImage.getCPtr(obj));
  }

  public static void MBRecognizerImage_assign(SWIGTYPE_p_p_MBRecognizerImage obj, SWIGTYPE_p_MBRecognizerImage value) {
    RecognizerApiWrapperPINVOKE.MBRecognizerImage_assign(SWIGTYPE_p_p_MBRecognizerImage.getCPtr(obj), SWIGTYPE_p_MBRecognizerImage.getCPtr(value));
  }

  public static SWIGTYPE_p_MBRecognizerImage MBRecognizerImage_value(SWIGTYPE_p_p_MBRecognizerImage obj) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognizerImage_value(SWIGTYPE_p_p_MBRecognizerImage.getCPtr(obj));
    SWIGTYPE_p_MBRecognizerImage ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_MBRecognizerImage(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer new_MBCroatiaPdf417PaymentRecognizer() {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.new_MBCroatiaPdf417PaymentRecognizer();
    SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer copy_MBCroatiaPdf417PaymentRecognizer(SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer value) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.copy_MBCroatiaPdf417PaymentRecognizer(SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(value));
    SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer(cPtr, false);
    return ret;
  }

  public static void delete_MBCroatiaPdf417PaymentRecognizer(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer obj) {
    RecognizerApiWrapperPINVOKE.delete_MBCroatiaPdf417PaymentRecognizer(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(obj));
  }

  public static void MBCroatiaPdf417PaymentRecognizer_assign(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer obj, SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer value) {
    RecognizerApiWrapperPINVOKE.MBCroatiaPdf417PaymentRecognizer_assign(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(obj), SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(value));
  }

  public static SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer MBCroatiaPdf417PaymentRecognizer_value(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer obj) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBCroatiaPdf417PaymentRecognizer_value(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer.getCPtr(obj));
    SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer new_MBCroatiaQrPaymentRecognizer() {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.new_MBCroatiaQrPaymentRecognizer();
    SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer copy_MBCroatiaQrPaymentRecognizer(SWIGTYPE_p_MBCroatiaQrPaymentRecognizer value) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.copy_MBCroatiaQrPaymentRecognizer(SWIGTYPE_p_MBCroatiaQrPaymentRecognizer.getCPtr(value));
    SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer(cPtr, false);
    return ret;
  }

  public static void delete_MBCroatiaQrPaymentRecognizer(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer obj) {
    RecognizerApiWrapperPINVOKE.delete_MBCroatiaQrPaymentRecognizer(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer.getCPtr(obj));
  }

  public static void MBCroatiaQrPaymentRecognizer_assign(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer obj, SWIGTYPE_p_MBCroatiaQrPaymentRecognizer value) {
    RecognizerApiWrapperPINVOKE.MBCroatiaQrPaymentRecognizer_assign(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer.getCPtr(obj), SWIGTYPE_p_MBCroatiaQrPaymentRecognizer.getCPtr(value));
  }

  public static SWIGTYPE_p_MBCroatiaQrPaymentRecognizer MBCroatiaQrPaymentRecognizer_value(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer obj) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBCroatiaQrPaymentRecognizer_value(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer.getCPtr(obj));
    SWIGTYPE_p_MBCroatiaQrPaymentRecognizer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_MBCroatiaQrPaymentRecognizer(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_MBRecognizerRunner new_MBRecognizerRunner() {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.new_MBRecognizerRunner();
    SWIGTYPE_p_p_MBRecognizerRunner ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBRecognizerRunner(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_MBRecognizerRunner copy_MBRecognizerRunner(SWIGTYPE_p_MBRecognizerRunner value) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.copy_MBRecognizerRunner(SWIGTYPE_p_MBRecognizerRunner.getCPtr(value));
    SWIGTYPE_p_p_MBRecognizerRunner ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_MBRecognizerRunner(cPtr, false);
    return ret;
  }

  public static void delete_MBRecognizerRunner(SWIGTYPE_p_p_MBRecognizerRunner obj) {
    RecognizerApiWrapperPINVOKE.delete_MBRecognizerRunner(SWIGTYPE_p_p_MBRecognizerRunner.getCPtr(obj));
  }

  public static void MBRecognizerRunner_assign(SWIGTYPE_p_p_MBRecognizerRunner obj, SWIGTYPE_p_MBRecognizerRunner value) {
    RecognizerApiWrapperPINVOKE.MBRecognizerRunner_assign(SWIGTYPE_p_p_MBRecognizerRunner.getCPtr(obj), SWIGTYPE_p_MBRecognizerRunner.getCPtr(value));
  }

  public static SWIGTYPE_p_MBRecognizerRunner MBRecognizerRunner_value(SWIGTYPE_p_p_MBRecognizerRunner obj) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognizerRunner_value(SWIGTYPE_p_p_MBRecognizerRunner.getCPtr(obj));
    SWIGTYPE_p_MBRecognizerRunner ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_MBRecognizerRunner(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_void new_MBRecognizerArray(int nelements) {
    global::System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.new_MBRecognizerArray(nelements);
    SWIGTYPE_p_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_void(cPtr, false);
    return ret;
  }

  public static void delete_MBRecognizerArray(SWIGTYPE_p_p_void ary) {
    RecognizerApiWrapperPINVOKE.delete_MBRecognizerArray(SWIGTYPE_p_p_void.getCPtr(ary));
  }

  public static System.IntPtr MBRecognizerArray_getitem(SWIGTYPE_p_p_void ary, int index) { 
    System.IntPtr cPtr = RecognizerApiWrapperPINVOKE.MBRecognizerArray_getitem(SWIGTYPE_p_p_void.getCPtr(ary), index);
    return cPtr;
    }

  public static void MBRecognizerArray_setitem(SWIGTYPE_p_p_void ary, int index, System.IntPtr value) {
    RecognizerApiWrapperPINVOKE.MBRecognizerArray_setitem(SWIGTYPE_p_p_void.getCPtr(ary), index, value);
  }

  public static readonly int MB_FALSE = RecognizerApiWrapperPINVOKE.MB_FALSE_get();
  public static readonly int MB_TRUE = RecognizerApiWrapperPINVOKE.MB_TRUE_get();
}

}
namespace Microblink {

public class SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long_enum_MBDetectionStatus__unsigned_char obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_unsigned_char {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_unsigned_char(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_unsigned_char() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_unsigned_char obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_MBRecognizerImage {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_MBRecognizerImage(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_MBRecognizerImage() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_MBRecognizerImage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_p_MBRecognizerImage {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_MBRecognizerImage(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_MBRecognizerImage() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_MBRecognizerImage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_p_MBRecognizerRunner {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_MBRecognizerRunner(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_MBRecognizerRunner() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_MBRecognizerRunner obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_p_q_const__MBPoint_unsigned_long__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_f_unsigned_char__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_unsigned_char__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_unsigned_char__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_unsigned_char__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_MBRecognizerRunner {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_MBRecognizerRunner(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_MBRecognizerRunner() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_MBRecognizerRunner obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_p_q_const__MBRecognizerImage_enum_MBShowImageType_p_q_const__char__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_f___void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f___void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f___void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f___void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_p_void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_MBCroatiaQrPaymentRecognizer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_MBCroatiaQrPaymentRecognizer(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_MBCroatiaQrPaymentRecognizer() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_MBCroatiaQrPaymentRecognizer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_MBCroatiaQrPaymentRecognizer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_MBCroatiaPdf417PaymentRecognizer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
namespace Microblink {

public class SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_MBCroatiaPdf417PaymentRecognizer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

}
